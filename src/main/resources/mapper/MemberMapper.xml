<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.kok.mapper.MemberMapper">
    <insert id="insertMember">
        insert into tbl_member(user_id,member_provider,member_profile_url)
        values(#{userId},#{memberProvider},#{memberProfileUrl})
    </insert>

<!--    프로필 사진 삭제-->
    <delete id="deleteProfile">
        delete from tbl_user_profile_file
        where user_id=#{id}
    </delete>
    <update id="deleteProfileUrl">
        update tbl_member
        set member_profile_url=null
        where user_id=#{id}
    </update>
<!--    프로필 사진 추가-->
    <insert id="insertProfileFile">
        insert into tbl_user_profile_file(file_id, user_id)
        values(#{fileId}, #{id})
    </insert>

    <sql id="search">
        <if test="keyword != null and keyword != ''">
            and (
            user_name like concat('%', #{keyword}, '%') or
            user_email like concat('%', #{keyword}, '%') or
            job_name like concat('%', #{keyword}, '%')
            )
        </if>
    </sql>

<!-- 일반 회원 전체 조회 -->
    <select id="selectMembers">
        select id, user_name, user_phone, user_email, user_role, sns_email, user_status, member_profile_url, avg_score, job_name
        from view_user_with_evaluation_and_job
        where user_status = 'active' and user_role = 'member'
        <include refid="search"/>
        order by id desc
        limit #{criteria.count} offset #{criteria.offset}
    </select>

<!--  목록 개수  -->
    <select id="selectCount">
        select count(*)
        from view_user_with_evaluation_and_job
        where user_status = 'active' and user_role = 'member'
        <include refid="search"/>
    </select>

<!-- 회원 아이디로 조회 -->
<select id="selectMember">
    select id, user_name, user_phone, user_email, user_role, sns_email, user_status, member_profile_url, avg_score, job_name
    from view_user_with_evaluation_and_job
    where user_status = 'active' and user_role = 'member' and id = #{id}
</select>

<!-- 회원 아이디로 프로필 기본 정보 조회 -->
<select id="selectProfileMember">
    select v.id, v.user_name, v.user_phone, v.user_email, v.user_role, v.sns_email, v.user_status, v.member_profile_url, v.avg_score, v.job_name, m.member_info
    from view_user_with_evaluation_and_job v
    join tbl_member m
    on v.id=m.user_id
    where v.user_status = 'active' and v.user_role = 'member' and v.id = #{id}
</select>

<!--    회원 id로 지원한 체험 공고 목록 조회-->
    <select id="selectExperienceByMemberId">
        select r.id, r.member_id, c.company_name, e.experience_notice_title, r.request_experience_status
        from tbl_user u
        join tbl_request_experience r
        on r.member_id=u.id
        join tbl_experience_notice e
        on e.id=r.experience_notice_id
        join tbl_company c
        on c.user_id=e.company_id
        where u.id=#{memberId}
        and r.request_experience_active='active'
    </select>
    <!--    회원 id로 지원한 인턴 공고 목록 조회-->
    <select id="selectInternByMemberId">
        select r.id, r.member_id, c.company_name, i.intern_notice_title, r.request_intern_status
        from tbl_user u
        join tbl_request_intern r
        on r.member_id=u.id
        join tbl_intern_notice i
        on i.id=r.intern_notice_id
        join tbl_company c
        on c.user_id=i.company_id
        where u.id=#{memberId}
        and r.request_intern_active='active'
    </select>

<!--    회원 id로 게시글 목록 조회-->
    <select id="selectPostsByMemberId">
        select u.user_name, p.id, p.post_content, p.likes_count, p.post_status, p.created_datetime
        from tbl_user u
        join tbl_post p
        on p.member_id=u.id
        where u.id=#{memberId}
        and p.post_status='active'
    </select>

<!--    회원 id로 직군 조회-->
    <select id="selectJobCategoryByMemberId">
        select j.job_name
        from tbl_user u
        join tbl_user_job_category uj
        on u.id = uj.user_id
        join tbl_job_category j
        on uj.job_category = j.id
        where u.id=#{memberId}
    </select>

<!--    평점 평균 조회-->
    <select id="selectAvgByMemberId">
        select avg
        from view_member_with_evaluation
        where member_id=#{memberId}
    </select>
<!--  전화번호로 회원 sns이메일 조회  -->
    <select id="selectLinkBYPhone">
        select u.sns_email, m.member_provider from tbl_user u join tbl_member m
        on u.id= m.user_id
        where u.user_phone = #{userPhone} and u.user_status = 'active' and m.member_provider != 'kok'
        order by m.member_provider DESC

    </select>
<!-- 결제 내역 조회-->
    <select id="selectPaymentByMemberId">
        select p.id, c.company_name, e.experience_notice_title, p.payment_status, p.payment_price, p.payment_paid_datetime
        from tbl_user u
        join tbl_payment p
        on p.user_id=u.id
        join tbl_request_experience r
        on p.request_experience_id=r.id
        join tbl_experience_notice e
        on e.id=r.experience_notice_id
        join tbl_company c
        on c.user_id=e.company_id
        where u.id=#{memberId}
    </select>

<!--    저장된 체험 공고 조회-->
    <select id="selectSavedExpByMemberId">
        select e.id, e.company_id, e.experience_notice_title, e.experience_notice_status, e.experience_notice_subtitle, c.company_name
        from tbl_save_experience_notice se
        join tbl_user u
        on u.id=se.member_id
        join tbl_experience_notice e
        on e.id=se.experience_notice_id
        join tbl_company c
        on c.user_id=e.company_id
        where u.id=#{memberId}
        and e.experience_notice_status='active'
    </select>

    <!--    저장된 인턴 공고 조회-->
    <select id="selectSavedIntByMemberId">
        select i.id, i.company_id, i.intern_notice_title, i.intern_notice_status, i.intern_notice_subtitle, c.company_name
        from tbl_save_intern_notice sn
        join tbl_user u
        on u.id=sn.member_id
        join tbl_intern_notice i
        on i.id=sn.intern_notice_id
        join tbl_company c
        on c.user_id=i.company_id
        where u.id=#{memberId}
        and i.intern_notice_status='active'
    </select>

<!--    체험 지원 취소-->
    <update id="updateExpReq">
        update tbl_request_experience
        set request_experience_active='inactive'
        where id=#{id}
    </update>

<!--    인턴 지원 취소-->
    <update id="updateIntReq">
        update tbl_request_intern
        set request_intern_active='inactive'
        where id=#{id}
    </update>

<!--    프로필 업데이트-->
    <update id="updateProfileInfo">
        update tbl_member
        set member_info=#{info}
        where user_id=#{memberId}
    </update>
    <update id="updateProfileName">
        update tbl_user
        set user_name=#{name}
        where id=#{id}
    </update>
    <update id="updateProfileCategory">
        update tbl_user_job_category
        set job_category=(
            select id from tbl_job_category
                  where job_name = #{job}
            )
        where user_id=#{id}
    </update>
    <insert id="insertProfileJob">
        insert into tbl_user_job_category(user_id, job_category)
        values(#{id}, (
            select id from tbl_job_category
                  where job_name = #{job}
            ))
    </insert>
    <update id="updateProfileUrl">
        update tbl_member
        set member_profile_url=#{s3Key}
        where user_id=#{id}
    </update>
</mapper>