<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.kok.mapper.CommunityPostMapper">
<!-- 게시글 전체 목록 -->
    <select id="selectCommunityPosts">
        select u.id as member_id, u.user_name, m.member_profile_url as snsProfile, f.file_path as memberProfileUrl, p.id as id, p.post_content, p.post_status, p.created_datetime, p.updated_datetime, ujc.job_category, jc.job_name, p.likes_count
        from tbl_user u
        join tbl_member m on u.id = m.user_id
        join tbl_post p on m.user_id = p.member_id
        left join tbl_user_job_category ujc on u.id = ujc.user_id
        left join tbl_job_category jc on ujc.job_category = jc.id
        left join tbl_user_profile_file upf on u.id = upf.user_id
        left join tbl_file f on upf.file_id = f.id
        where p.post_status = 'active'
        order by created_datetime desc
        limit #{rowCount} offset #{offset}
    </select>

<!-- 게시글 전체 갯수 -->
    <select id="selectCommunityPostCount">
        select count(*)
        from tbl_member m
                 join tbl_post p on m.user_id = p.member_id
            and p.post_status = 'active'
    </select>

<!-- 게시글 조회 -->
    <select id="selectCommunityPost">
        select u.id as member_id, u.user_name, m.member_profile_url as snsProfile, f.file_path as memberProfileUrl, p.id as id, p.post_content, p.post_status, p.created_datetime, p.updated_datetime, ujc.job_category, jc.job_name, p.likes_count
        from tbl_user u
                 join tbl_member m on u.id = m.user_id
                 join tbl_post p on m.user_id = p.member_id
                 left join tbl_user_job_category ujc on u.id = ujc.user_id
                 left join tbl_job_category jc on ujc.job_category = jc.id
                 left join tbl_user_profile_file upf on u.id = upf.user_id
                 left join tbl_file f on upf.file_id = f.id
        where p.post_status = 'active' and p.id = #{id}
    </select>

<!-- 게시글 작성 -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into tbl_post (post_content, member_id)
        values (#{postContent}, #{memberId})
    </insert>

<!-- 게시글 삭제 -->
    <update id="delete">
        update tbl_post
        set post_status = 'inactive'
        where id = #{id}
    </update>

<!-- 게시글 수정 -->
    <update id="update">
        update tbl_post
        set post_content = #{postContent}, updated_datetime = now()
        where id = #{id}
    </update>

<!-- 게시글 좋아요 증가 -->
    <update id="increaseLikesCount">
        update tbl_post
        set likes_count = likes_count + 1
        where id = #{id}
    </update>

<!-- 게시글 좋아요 감소 -->
    <update id="decreaseLikesCount">
        update tbl_post
        set likes_count = likes_count - 1
        where id = #{id}
        and likes_count > 0
    </update>

<!--  멤버 별 게시물 조회  -->
    <select id="selectPostById">
        select id, post_content, post_status, created_datetime
        from tbl_post
        where member_id = #{id}
        order by created_datetime desc
            limit 3
    </select>

<!--  회원 별 게시글 갯수  -->
    <select id="selectPostsCountByMemberId">
        select count(*)
        from tbl_post
        where member_id = #{memberId}
        and post_status = 'active'
    </select>
</mapper>